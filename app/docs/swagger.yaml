basePath: /
definitions:
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegistrationRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Run:
    properties:
      created_at:
        type: string
      distance:
        type: integer
      id:
        type: integer
      time:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      updated_at:
        type: string
      username:
        type: string
    type: object
  security.TokenPair:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: Distance Challenge API.
  title: Distance Challenge API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login to an account
      operationId: login
      parameters:
      - description: login body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/security.TokenPair'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new account
      operationId: register
      parameters:
      - description: register body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.RegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register
      tags:
      - auth
  /me:
    get:
      consumes:
      - application/json
      description: get me information
      operationId: getMe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Show self
      tags:
      - api
  /runs:
    get:
      consumes:
      - application/json
      description: list all runs
      operationId: getRuns
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Run'
            type: array
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List runs
      tags:
      - api
  /runs/{id}:
    delete:
      consumes:
      - application/json
      description: delete a specific run
      operationId: deleteRun
      parameters:
      - description: run id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete a run
      tags:
      - api
    get:
      consumes:
      - application/json
      description: get a specific run
      operationId: getRun
      parameters:
      - description: run id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Run'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get a run
      tags:
      - api
    put:
      consumes:
      - application/json
      description: update a specific run
      operationId: updateRun
      parameters:
      - description: run id
        in: path
        name: id
        type: string
      - description: run body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Run'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Run'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update a run
      tags:
      - api
  /users:
    get:
      consumes:
      - application/json
      description: get list of all users
      operationId: getUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - api
  /users/{id}/runs:
    post:
      consumes:
      - application/json
      description: create a new run
      operationId: createRun
      parameters:
      - description: user id
        in: path
        name: id
        type: string
      - description: run body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Run'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Run'
            type: array
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create a run
      tags:
      - api
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: get information of a specific user
      operationId: getUser
      parameters:
      - description: user id
        in: path
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - api
    put:
      consumes:
      - application/json
      description: update a user
      operationId: updateUser
      parameters:
      - description: user id
        in: path
        name: userId
        type: string
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update a user
      tags:
      - api
  /users/{userId}/activate:
    put:
      consumes:
      - application/json
      description: activate a specific user
      operationId: activateUser
      parameters:
      - description: user id
        in: path
        name: userId
        type: string
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Activates a user
      tags:
      - api
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
